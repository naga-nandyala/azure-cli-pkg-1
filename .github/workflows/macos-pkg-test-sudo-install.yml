name: (macospkg) Test Sudo Install

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to test (e.g. 2.77.0 - without 'v' prefix)"
        required: true
        type: string

jobs:
  test-sudo-install:
    name: Test PKG Install (${{ matrix.runner }}, ${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: macos-14
            arch: arm64
          - runner: macos-13
            arch: x86_64

    steps:
      - name: Environment info
        run: |
          echo "=== Environment Information ==="
          echo "Runner: ${{ matrix.runner }}"
          echo "Architecture: ${{ matrix.arch }}"
          echo "macOS version: $(sw_vers -productVersion)"
          echo "Actual arch: $(uname -m)"
          echo "Available space: $(df -h / | tail -1 | awk '{print $4}')"

      - name: Clean previous installations
        run: |
          echo "=== Cleaning Previous Installations ==="

          # Remove any existing installations
          sudo rm -f /usr/local/bin/az 2>/dev/null || true
          sudo rm -rf /usr/local/microsoft/azure-cli 2>/dev/null || true

          # Verify cleanup
          if command -v az >/dev/null 2>&1; then
            echo "Warning: az still found in PATH after cleanup"
            which az
          else
            echo "✅ No existing Azure CLI installations found"
          fi

      - name: Download and install PKG
        run: |
          echo "=== Download and Install PKG ==="

          VERSION="${{ github.event.inputs.version }}"
          RELEASE_TAG="azure-cli-pkg-v${VERSION}"
          ARCH="${{ matrix.arch }}"
          PKG_FILENAME="azure-cli-${VERSION}-macos-${ARCH}.pkg"

          echo "Downloading PKG: $PKG_FILENAME"
          echo "From release: $RELEASE_TAG (version: $VERSION)"
          echo "Architecture: $ARCH"
          echo "Full URL: https://github.com/${{ github.repository }}/releases/download/${RELEASE_TAG}/${PKG_FILENAME}"

          # Download PKG file from GitHub releases
          curl -L -o "$PKG_FILENAME" \
            "https://github.com/${{ github.repository }}/releases/download/${RELEASE_TAG}/${PKG_FILENAME}"

          if [ -f "$PKG_FILENAME" ]; then
            echo "✅ PKG file downloaded successfully"
            echo "File size: $(ls -lh "$PKG_FILENAME" | awk '{print $5}')"
            
            # Check if file is too small (likely an error page)
            FILE_SIZE=$(stat -f%z "$PKG_FILENAME")
            if [ "$FILE_SIZE" -lt 1000 ]; then
              echo "❌ Downloaded file is too small ($FILE_SIZE bytes), likely an error"
              echo "File contents:"
              cat "$PKG_FILENAME"
              echo ""
              echo "Available releases and assets:"
              curl -s "https://api.github.com/repos/${{ github.repository }}/releases" | grep -E '"tag_name"|"name".*\.pkg' | head -20
              exit 1
            fi
          else
            echo "❌ Failed to download PKG file"
            exit 1
          fi

          # Install using sudo installer
          echo "Installing PKG using sudo installer..."
          sudo installer -pkg "$PKG_FILENAME" -target /

          echo "✅ PKG installation completed"

      - name: Verify installation structure
        run: |
          echo "=== Installation Structure Verification ==="

          # Check executable
          echo "1. Executable location:"
          if [ -f /usr/local/bin/az ]; then
            ls -la /usr/local/bin/az
            echo "✅ Executable found at /usr/local/bin/az"
          else
            echo "❌ Executable NOT found at /usr/local/bin/az"
            exit 1
          fi

          # Check runtime environment
          echo ""
          echo "2. Runtime environment:"
          if [ -d /usr/local/microsoft/azure-cli ]; then
            echo "✅ Runtime found at /usr/local/microsoft/azure-cli"
            echo "   Size: $(du -sh /usr/local/microsoft/azure-cli | cut -f1)"
            echo "   Python executable:"
            ls -la /usr/local/microsoft/azure-cli/bin/python* 2>/dev/null | head -3
          else
            echo "❌ Runtime NOT found at /usr/local/microsoft/azure-cli"
            exit 1
          fi

          # Check Python packages
          echo ""
          echo "3. Python packages check:"
          if [ -d /usr/local/microsoft/azure-cli/lib ]; then
            echo "   Checking for Azure packages..."
            find /usr/local/microsoft/azure-cli/lib -name "azure" -type d | head -3
            
            echo "   Checking for knack package..."
            find /usr/local/microsoft/azure-cli/lib -name "knack" -type d | head -1
          else
            echo "❌ lib directory not found"
            exit 1
          fi

      - name: Test Azure CLI functionality
        run: |
          echo "=== Testing Azure CLI Functionality ==="

          # Test basic commands
          echo "1. Version check:"
          /usr/local/bin/az --version

          echo ""
          echo "2. Help command:"
          /usr/local/bin/az --help | head -20

          echo ""
          echo "3. List commands:"
          /usr/local/bin/az | head -30

          echo ""
          echo "4. Check environment variable:"
          /usr/local/bin/az version --output json | grep -i installer || echo "Installer info not in output"

      - name: Test via PATH
        run: |
          echo "=== Testing via PATH ==="

          # Verify az is in PATH
          which az

          # Test via PATH
          echo "Running 'az --version' from PATH:"
          az --version

      - name: Cleanup installation
        if: always()
        run: |
          echo "=== Cleaning up installation ==="
          sudo rm -f /usr/local/bin/az
          sudo rm -rf /usr/local/microsoft/azure-cli
          echo "✅ Cleanup complete"
